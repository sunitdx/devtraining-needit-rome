<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>ni_getinfo (v2)</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {


	// Get value from the user_name path parameter passed in the URL
	var requestUser = request.pathParams.user_name;
	// Get value of the ni_query query parameter passed in the URL
	var requestNIQuery = request.queryParams.ni_query;

	// Query the sys_user table to get the user record for the user passed in
	// the user_id path parameter.  
	var requestUserName = new GlideRecord('sys_user');
	requestUserName.get('user_name',requestUser);

	if(!requestUserName.user_name){
		var myError = new sn_ws_err.ServiceError();
		myError.setStatus(542);
		myError.setMessage("Invalid User");
		myError.setDetail("The User details needs to be corrected. Please do the needful.");
		response.setError(myError);
		return myError;
	}

	// Get the count of active NeedIt table records where the user from the
	// user_name path parameter is the Requested for.  The encoded query is from the
	// Query Parameter Associations.  Group by category.
	var userNICount = new GlideAggregate('x_58872_needit_needit');
	userNICount.addAggregate('COUNT');
	userNICount.addQuery('u_requested_for',requestUserName.sys_id);
	userNICount.addEncodedQuery(requestNIQuery);
	userNICount.groupBy('u_request_type');
	userNICount.query();


	var needitRecs = 0;
	var niUserRecs = [];
	var needitRecsCount = 0;

	while (userNICount.next()) {
		needitRecs = userNICount.getAggregate('COUNT');
		var reqType = userNICount.u_request_type.getDisplayValue();
		niUserRecs.push({"requestType": reqType, "count": needitRecs});
		needitRecsCount = parseInt(needitRecsCount) + parseInt(needitRecs);
	}

	var body = {};

	body.totalUserNIRecs = needitRecsCount;
	body.catCounts = niUserRecs;
	body.user = {"User name" : requestUserName.user_name ,"user id" : requestUserName.sys_id};

	if(requestNIQuery == ""){
		return new sn_ws_err.NotFoundError("There is no query. Please give one.");
	}else{
		response.setBody(body);
	}



})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v2/needit_api/nigetInfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/nigetInfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Find Active NeedIt record for a user.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-11 06:05:03</sys_created_on>
        <sys_id>ec3cbc972f393010e4b8f7ecf699b61b</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>ni_getinfo (v2)</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_ec3cbc972f393010e4b8f7ecf699b61b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-08-11 06:15:08</sys_updated_on>
        <web_service_definition display_value="NeedIt Api">48f906872f313010e4b8f7ecf699b6f3</web_service_definition>
        <web_service_version display_value="v2">203c78172f393010e4b8f7ecf699b646</web_service_version>
    </sys_ws_operation>
</record_update>
